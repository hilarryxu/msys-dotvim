if exists('s:loaded')
  finish
endif
let s:loaded = 1

let s:path = expand('<sfile>:p:h')

" plug {{{1
call plug#begin('~/.vim/plugged')

" Plug 'junegunn/vim-easy-align'

Plug 'skywind3000/asyncrun.vim'
Plug 'skywind3000/vim-auto-popmenu'

" if has('nvim') || has('patch-8.0.902')
"   Plug 'mhinz/vim-signify'
" else
"   Plug 'mhinz/vim-signify', { 'branch': 'legacy' }
" endif
Plug 'ludovicchabant/vim-gutentags'
" Plug 'octol/vim-cpp-enhanced-highlight'
" Plug 'tpope/vim-unimpaired'

call plug#end()

" tags {{{1
set tags=./.tags;,.tags

" gutentags 搜索工程目录的标志，碰到这些文件/目录名就停止向上一级目录递归
let g:gutentags_project_root = ['.root', '.svn', '.git', '.hg', '.project']

" 所生成的数据文件的名称
let g:gutentags_ctags_tagfile = '.tags'

" 将自动生成的 tags 文件全部放入 ~/.cache/tags 目录中，避免污染工程目录
let s:vim_tags = expand('~/.cache/tags')
" let g:gutentags_cache_dir = s:vim_tags

" 配置 ctags 的参数
let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q']
let g:gutentags_ctags_extra_args += ['--c++-kinds=+px']
let g:gutentags_ctags_extra_args += ['--c-kinds=+px']

" asyncrun {{{1
let g:asyncrun_rootmarks = ['.svn', '.git', '.root']

" 自动打开 quickfix window ，高度为 6
let g:asyncrun_open = 6

" 设置 F10 打开/关闭 Quickfix 窗口
nnoremap <F10> :call asyncrun#quickfix_toggle(6)<cr>

" acp {{{1
" enable this plugin for filetypes, '*' for all files.
let g:apc_enable_ft = {'text':1, 'c':1, 'cpp':1}

" source for dictionary, current or other loaded buffers, see ':help cpt'
set cpt=.,k,w,b

" don't select the first item.
set completeopt=menu,menuone,noselect

" suppress annoy messages.
set shortmess+=c

" others {{{1
call xcc#plug#load()
PI edit
PI snip
PI quickmenu

let g:quickmenu_cmds = {
      \ 'help.md': { 'command': 'e ' . s:path . '/help.md' }
      \ }

" nnoremap - :<C-u>ls<CR>:buffer<Space>

set t_Co=256
colorscheme xoria256mod

" config {{{1
augroup local_vimrc_filetype
  autocmd!
  " autocmd FileType c setlocal shiftwidth=4 tabstop=4 softtabstop=4 expandtab
augroup END
